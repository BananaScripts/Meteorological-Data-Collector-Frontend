name: CI Development

on:
  push:
    branches:
      - development
      - Fix/*
      - Feat/*
      - feat/*
      - fix/*
      - main
  pull_request:
    branches:
      - main

jobs:
  build-e-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'  

    - name: Install Dependencies
      run: |
        cd seth
        npm install

    - name: Build Project
      run: |
        cd seth
        npm run build
    
    - name: Run Tests
      run: |
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        echo "Branch name: $BRANCH_NAME"
  
        if [[ "$GITHUB_BASE_REF" == "main" && "$GITHUB_HEAD_REF" == "development" ]]; then
          echo "Running integration tests for development to main"
          cd seth
          npm test -- seth/src/__tests__/integration
        elif [[ "$BRANCH_NAME" == "development" ]]; then
          echo "Running tests for development branch"
          cd seth
          npm test -- seth/src/__tests__/unit
        elif [[ "$BRANCH_NAME" == Feat/* ]] || [[ "$BRANCH_NAME" == Fix/* ]] || [[ "$BRANCH_NAME" == feat/* ]] || [[ "$BRANCH_NAME" == fix/* ]]; then
          FEATURE_TEST_DIR="seth/src/__tests__/unit/tasks/${BRANCH_NAME//\//-}"
          echo "Checking for tests in: $FEATURE_TEST_DIR"
          if [ -d "$FEATURE_TEST_DIR" ]; then
            echo "Running tests for branch $BRANCH_NAME in $FEATURE_TEST_DIR"
            cd seth
            npm test -- $FEATURE_TEST_DIR
          else
            echo "No tests found for $BRANCH_NAME."
          fi
        fi

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Google Cloud
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Build and Push Docker Image to Artifact Registry
      run: |
        docker build -t southamerica-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/meteorological-data-collector/meteorological-data-collector .
        docker push southamerica-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/meteorological-data-collector/meteorological-data-collector

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy meteorological-data-collector \
          --image southamerica-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/meteorological-data-collector/meteorological-data-collector:latest \
          --platform managed \
          --region southamerica-east1 \
          --allow-unauthenticated \
          --timeout 600
